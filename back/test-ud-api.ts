/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API Urban Dictionary
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è: node test-ud-api.ts
 */
async function testUDApi() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API Urban Dictionary...\n');

  const term = 'sloppy seconds'; // –¢–µ—Å—Ç–æ–≤–æ–µ —Å–ª–æ–≤–æ
  const url = `https://unofficialurbandictionaryapi.com/api/search?term=${encodeURIComponent(term)}`;

  try {
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫: ${url}`);

    const response = await fetch(url);
    console.log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status} ${response.statusText}`);

    if (!response.ok) {
      throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
    }

    const data = await response.json();
    console.log('–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API:');
    console.log(JSON.stringify(data, null, 2));

    if (data.data && data.data.length > 0) {
      const firstDef = data.data[0];
      console.log('\n‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–µ—Ä–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:');
      console.log(`  –°–ª–æ–≤–æ: ${firstDef.word || term}`);
      console.log(`  –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: ${firstDef.meaning || '–ù–µ—Ç'}`);
      console.log(`  –ü—Ä–∏–º–µ—Ä: ${firstDef.example || '–ù–µ—Ç'}`);
      console.log(`  –ê–≤—Ç–æ—Ä: ${firstDef.contributor || '–ù–µ—Ç'}`);
      console.log(`  –î–∞—Ç–∞: ${firstDef.date || '–ù–µ—Ç'}`);
      console.log(`  –°—Å—ã–ª–∫–∞: https://urbandictionary.com/define.php?term=${encodeURIComponent(term)}`);
    } else {
      console.log('\n‚ö†Ô∏è API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –¥–ª—è —Å–ª–æ–≤–∞ "sloppy seconds".');
    }

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ UD API:', error);
    console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('- –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞');
    console.log('- API –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('- Rate limit –ø—Ä–µ–≤—ã—à–µ–Ω');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testUDApi();
